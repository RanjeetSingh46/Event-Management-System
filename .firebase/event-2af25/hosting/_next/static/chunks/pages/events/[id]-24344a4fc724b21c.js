(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[32],{8576:function(s,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/events/[id]",function(){return t(5370)}])},5370:function(s,e,t){"use strict";t.r(e),t.d(e,{default:function(){return a}});var n=t(109),c=t(1065);async function a(s,e){let{query:{id:t},method:a}=s;switch(a){case"GET":try{let s=(0,n.JU)(c.db,"events",t),a=await (0,n.QT)(s);a.exists()?e.status(200).json({success:!0,id:a.id,...a.data()}):e.status(404).json({success:!1,message:"Event not found"})}catch(s){console.error("Error fetching event:",s),e.status(500).json({success:!1,message:"Failed to fetch event"})}break;case"PUT":try{let a=(0,n.JU)(c.db,"events",t);await (0,n.r7)(a,s.body),e.status(200).json({success:!0,message:"Event updated successfully"})}catch(s){console.error("Error updating event:",s),e.status(400).json({success:!1,message:s.message})}break;case"DELETE":try{await (0,n.oe)((0,n.JU)(c.db,"events",t)),e.status(200).json({success:!0,message:"Event deleted successfully"})}catch(s){console.error("Error deleting event:",s),e.status(400).json({success:!1,message:s.message})}break;default:e.setHeader("Allow",["GET","PUT","DELETE"]),e.status(405).json({success:!1,message:"Method ".concat(a," Not Allowed")})}}}},function(s){s.O(0,[888,774,179],function(){return s(s.s=8576)}),_N_E=s.O()}]);